generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  car_id     String   @db.Uuid
  start_time DateTime @db.Timestamp(6)
  end_time   DateTime @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  car        car      @relation(fields: [car_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model car {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  model       String    @db.VarChar(255)
  make        String    @db.VarChar(255)
  year        Int
  color       String    @db.VarChar(255)
  location_id String    @db.Uuid
  status      String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  location    location  @relation(fields: [location_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model location {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  city       String   @db.VarChar(255)
  state      String   @db.VarChar(255)
  zip_code   String   @db.VarChar(255)
  country    String   @db.VarChar(255)
  latitude   Float
  longitude  Float
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  car        car[]
}

model profile {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.Uuid
  phone_number String   @db.VarChar(255)
  address      String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  state        String   @db.VarChar(255)
  zip_code     String   @db.VarChar(255)
  country      String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  company     company[]
  profile     profile[]
}
